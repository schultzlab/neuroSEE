Notes: 
1. 'file': All file names are in the format yyyymmdd_HH_MM_SS.
2. 'expname'
    e.g.    fam1fam2-fam1           - the subset of fam1 images in the experiment fam1fam2    
            fam1_s1-4               - fam1 for all 4 sessions
            fam1nov_fam1fam1rev     - both fam1nov and fam1fam1rev experiments
            fam1fam1rev-fam1rev     - the subset of fam1rev images in the experiment fam1fam1rev
            open_s1                 - open field images for session 1
            open_s2-3               - open field images for sessions 2-3
    

INDIVIDUAL FILE PROCESSING (single or batch)
1. To process a single file
	run_pipeline.m OR
    frun_pipeline.m - function with input argument 'file' (character string) (e.g. '20181103_12_26_31')
    * processed data are saved in '...thefarm2/live/CrazyEights/AD_2PCa/Data/'

2. To process a batch of files 
    frun_pipeline_batch.m - function with input arguments array_id (number) and 'list.txt' (character string)
    * processed data are saved in '...thefarm2/live/CrazyEights/AD_2PCa/Data/'

    * To run through hpc
	 <jobscript>.pbs (e.g. run1D.pbs, run1D_fissa.pbs)  
     - generate array_id values in <jobscript.pbs> for number of files in 'list.txt' to process all files in 'list.txt'
        (e.g. #PBS -J 1-112 will generate array_id values from 1 to 112) 
       
     Notes:  
    1. On hpc, normcorre and CaImAn only work with Matlab R2017a. FISSA, in contrast, needs higher versions. 
        So frun_pipeline_batch automatically detects the version running and disregards FISSA when running R2017a even when settings call for it.
    2. This also means that 2 jobscripts are required to process the batch
        - one jobscript loads matlab/R2017a and does the pipeline with FISSA
        - another jobscript loads matlab/R2018a and picks up from FISSA correction
    3. The way frun_pipeline_batch.m is written, unless user forces overwriting of old data, it detects when a processing
        step has been done and picks up where it left off. So the jobscript for loading matlab/R2018a skips 
        motion correction and roi segmentation steps and picks up from FISSA correction.
    4. If both jobscripts are successful (usually the one without FISSA correction has errros in PF mapping, perhaps because
        no cells pass the placiness threshold), then there are 2 sets of PF maps to compare - with and without FISSA correction.

3. To view results for a file
    GUI_view_fileData.m - function with input argument 'file'

EXPERIMENT PROCESSING
- To register a batch of files from the same experiment and then do the pipeline
1. frun_collate_indivproc_results_batch.m 
    - function with input arguments 'list.txt' (char string) and force (logical)
    - generates fig with all green channel images of files in 'list.txt'
                             red channel image
                             trajectories
                             rois
                             PFmaps
    - user can choose a reference (template) image from these figures
    - processed data are saved in '...thefarm2/live/CrazyEights/AD_2PCa/Analysis/m##/'

2. frun_imreg_batch.m 
    - function with input arguments array_id, 'list.txt', 'reffile', slacknotify, force
    - registers the motion corrected file number <array_id> in 'list.txt' to the template 'reffile'
    - slacknotify: set to true to get slack notifications
    - force: set to true to do image registration despite existing registered images
    - reffile: first file on the list is the default
    - processed data are saved in '...thefarm2/live/CrazyEights/AD_2PCa/Data/'
    
    * To run through hpc
        - generate array_id values in <jobscript>.pbs for number of files in 'list.txt'

    Notes: 'list.txt' can include 'reffile'. It will simply be skipped.

3. frun_collate_imreg_results_batch.m
    - function with input arguments expname, 'reffile', 'list.txt', slacknotify, force
    
4. frun_imreg_ROIsegment-to-PFmaps_batch.m
    - function with input arguments 'list.txt', 'reffile', slacknotify, force
    - loads all images in 'list.txt' and performs ROI segmentation, fissa, spike extraction, 
        tracking data loading for each image in 'list.txt'
        then consolidates the data before running PF mapping
    - processed data from individual ROI segmentation, fissa, spike extraction, tracking data loading are saved in
        '...thefarm2/live/CrazyEights/AD_2PCa/Data/' in the individual file folders
    - processed consolidated data (masks, fissa output, spikes, tracking data, PF maps) are saved in
        '...thefarm2/live/CrazyEights/AD_2PCa/Analysis/m##/m##_expname/'
            

